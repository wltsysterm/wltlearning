2. 建造者模式的定义
        我们来看看建造者模式的一般定义：Separate the construction of a complex object from its representation so that the same construction process can create different representations. 即：将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。比如上面的例子，我们可以用同样的顺序构造不同的车。建造者模式的通用类图如下：
3. 建造者模式的优点
        1）封装性：使用建造者模式可以是客户端不必知道产品内部组成的细节。
        2）建造者独立，容易扩展：BenzBuilder和BMWBuilder是相互独立的，对系统扩展非常有利。
        3）便于控制细节风险：由于具体的建造者是独立的，因此可以对建造者过程逐步细化，而不对其他的模块产生任何影响。
4. 建造者模式的使用场景
        1）相同的方法，不同的执行顺序，产生不同的事件结果时，可以使用建造者模式。
        2）多个部件或零件，都可以装配到一个对象中，但是产生的运行结果又不想同时，可以使用建造者模式。
        3）产品类非常复杂，或者产品类中的调用顺序不同产生了不同的效能，这时候可以使用建造者模式。
        4）在对象创建过程中会使用到系统的一些其他对象，这些对象在产品对象的创建过程中不易得到，也可以采用建造者模式封装该对象的创建过程。这种场景只能是一个补偿的方法，因为一个对象不容易获得，而在设计阶段竟然没有发现，而要通过设计这模式来柔化创建过程，本身设计已经出问题了。

到这里，我们会发现，建造者模式和工厂方法模式有点像。但是两者有区别：建造者模式关注的是零件类型和装配工艺（顺序），而工厂模式是创建一个对象，这是最大不同的地方。