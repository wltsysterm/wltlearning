代理模式的核心作用就是通过代理，控制对对象的访问。这跟实际中是一样的，比如说明星都有经纪人，
这就是一个代理，比如有人要找某明星拍戏，那么首先处理这事的是他的经纪人，虽然拍戏需要自己拍，
但是拍戏前后的一些必须要做的事等等，都由这个经纪人来处理。
在程序中也是如此，通过代理，可以详细控制访问某个或者某类对象的方法，在调用这个方法前做前置
处理，调用这个方法后做后置处理。这也是AOP的实现原理。
那么代理模式的核心角色该如何设计呢？

设计思路：定义一个抽象角色，让代理角色和真实角色分别去实现它。
1. 真实角色：实现抽象角色，定义真实角色所要实现的业务逻辑，供代理角色调用。它只关注真正的业务逻辑，比如拍戏。
2. 代理角色：实现抽象角色，是真实角色的代理，通过真是角色的业务逻辑方法来实现抽象方法，并可以附加自己的操作，比如谈合同，布置场地等等。

下面来具体实现这个代理模式，代理模式分为静态代理和动态代理。
，而动态代理是程序自动帮我们生成一个代理，我们就不用管了。静态代理是我们自己创建一个代理类